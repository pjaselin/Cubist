name: Build and Release Cubist

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      CIBW_SKIP: "cp36-* cp37-* pp* *-win32 *-manylinux_i686 *_ppc64le *_s390x"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.11'

      - name: Enable Developer Command Prompt for Windows
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Add sys/time.h for Windows
        if: matrix.os == 'windows-latest'
        run: |
          mv winsys/ cubist/sys

      - name: Remove winsys folder for non-Windows OS
        if: matrix.os != 'windows-latest'
        run: |
          rm -r winsys/

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution 📦
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Build source distribution
      run: |
        python -m pip install setuptools wheel build cython numpy
        python -m build
    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  publish-to-pypi:
    # release only tagged commits to pypi / github
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags')
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/cubist/
    permissions:
      id-token: write

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        name: latest
        tag_name: latest
        body: Latest version of distribution
        files: |
          dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-testpypi:
    name: >-
      Publish Python 🐍 distribution 📦 to TestPyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/cubist/
    permissions:
      id-token: write

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution 📦 to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
