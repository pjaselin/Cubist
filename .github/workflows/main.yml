name: build and release cubist

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
  push:
    branches:
      - master
      - main
      - release
      - test
      - dev
  release:
    branches:
      - release
    types:
      - created

jobs:
  test:
    name: Test with pytest
    strategy:
      matrix:
        os: [ubuntu-latest] # [ macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2

    - name: Install dependencies
      run: |
        pip3 install --upgrade pip
        pip3 install setuptools wheel build cython
        pip3 install flake8 pytest pytest-cov numpy
        pip3 install .

    # # lint syntax errors
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # test
    - name: Test with pytest
      run: |
        pytest --cov=com --cov-report=xml --cov-report=html cubist

  build_wheels:
    name: Build wheels on ${{ matrix.os }}  - ${{ matrix.vers }}
    needs: test
    strategy:
      matrix:
        include:
          # - vers: i686
          #   os: ubuntu-20.04
          # - vers: aarch64
          #   os: ubuntu-20.04
          - vers: auto64
            os: ubuntu-20.04
          # - vers: arm64
          #   os: macos-10.15
          # - vers: auto64
          #   os: macos-10.15
          # - vers: auto64
          #   os: windows-2019
    runs-on: ${{ matrix.os }}
    env:
      CIBW_SKIP: "cp27-* cp34-* cp35-* pp* *-win32"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: wheels Linux ${{ matrix.vers }}
      if: runner.os == 'Linux'
      uses: joerick/cibuildwheel@v1.10.0
      env:
        CIBW_ARCHS_LINUX: ${{ matrix.vers }}

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"

    - name: Build sdist
      run: |
        python -m pip install setuptools wheel build cython numpy
        python setup.py sdist

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz

  release:
    # release only tagged commits to pypi / github
    name: release distribution
    needs: [build_wheels, build_sdist]
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.9]
    runs-on: ${{ matrix.platform }}

    steps:
    - name: mkdir
      run: |
        mkdir dist

    - name: download artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - name: ls
      run: |
        ls dist/

    # test publish to pypi
    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    # github upload release asset
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        name: latest
        tag_name: latest
        body: Latest version of distribution
        files: |
          dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # publish only tagged commits to pypi
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
